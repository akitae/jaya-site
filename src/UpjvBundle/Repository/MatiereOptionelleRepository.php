<?php

namespace UpjvBundle\Repository;
use UpjvBundle\Entity\Matiere;
use UpjvBundle\Entity\PoleDeCompetence;
use UpjvBundle\Entity\Semestre;
use UpjvBundle\Entity\Utilisateur;

/**
 * OptionnelleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MatiereOptionelleRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param $user Utilisateur
     * @return mixed
     */
    public function findByUser($user) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder
            ->where('e.user = :user')
            ->setParameter('user', $user)
            ->orderBy("e.ordre");

        return $queryBuilder->getQuery()->getResult();
    }

    public function findBySemestre(Semestre $semestre){
        return $this
            ->createQueryBuilder('o')
            ->join('o.matiere','matiere')
            ->where('matiere.semestre = :semestre')
            ->setParameter('semestre',$semestre)
            ->getQuery()
            ->getResult()
            ;
    }

    public function countNbrOptionEtudiantWant(Matiere $matiere){
        return $this
            ->createQueryBuilder('o')
            ->select('COUNT(o)')
            ->where('o.matiere = :matiere')
            ->setParameter('matiere',$matiere)
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function getNumberOrdreMaxForPoleDeCompetence(PoleDeCompetence $poleDeCompetence){
        $result =  $this
            ->createQueryBuilder('o')
            ->select('MAX(o.ordre)')
            ->join('o.matiere','matiere')
            ->where('matiere.poleDeCompetence = :poleDeCompetence')
            ->setParameter('poleDeCompetence',$poleDeCompetence)
            ->getQuery()
            ->getResult()
            ;

        if($result == null){
            return null;
        }else{
            return intval($result[0][1]);
        }
    }
    
    
    public function resetAllMatiereOption()
    {
        $rawSql = "DELETE FROM matiere_optionelle";

        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute();
    }
}
