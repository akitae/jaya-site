<?php

namespace UpjvBundle\Repository;
use Doctrine\ORM\NoResultException;

/**
 * UtilisateurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UtilisateurRepository extends \Doctrine\ORM\EntityRepository
{

    public function findUser ($email, $motDePasse) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder->where('e.email = :email')->setParameter('email', $email)
        ->andWhere('e.motDePasse = :motDePasse')->setParameter('motDePasse', $motDePasse);

        try {
            return $queryBuilder->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }

    }

    /**
     * Recherche l'utilisateur par l'identifiant.
     * @param $identifiant
     * @return mixed|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByIdentifiant ($identifiant) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder->where('e.identifiant = :identifiant')->setParameter('identifiant', $identifiant)
            ->andWhere('e.identifiant = :identifiant')->setParameter('identifiant', $identifiant);

        try {
            return $queryBuilder->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

    public function findUserByEmail ($email) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder->where('e.email = :email')->setParameter('email', $email);

        try {
            return $queryBuilder->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

    public function findUserByNumero ($numero) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder->where('e.numeroEtudiant = :numeroEtudiant')->setParameter('numeroEtudiant', $numero);

        try {
            return $queryBuilder->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

}
