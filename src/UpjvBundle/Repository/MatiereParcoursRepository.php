<?php

namespace UpjvBundle\Repository;
use UpjvBundle\Entity\Matiere;
use UpjvBundle\Entity\Parcours;

/**
 * MatiereParcoursRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MatiereParcoursRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param $parcours Parcours
     * @return mixed
     */
    public function findOptionelleByParcours ($parcours) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder
            ->where('e.parcours = :parcours')
            ->andWhere('e.optionnel = true')
            ->setParameter('parcours', $parcours);

        return $queryBuilder->getQuery()->getResult();
    }

    /**
     * Retourne toutes les matiÃ¨res appartemenet aux parcours.
     * @param $arrayParcours
     * @return mixed
     */
    public function findMatieresByParcours ($arrayParcours) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder
            ->where("e.parcours IN (:parcours)")
            ->setParameter("parcours", $arrayParcours);

        return $queryBuilder->getQuery()->getResult();
    }

    /**
     * @param $parcours
     * @param $matiere
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByMatiereParcours ($parcours, $matiere) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder
            ->where("e.parcours = :parcours")
            ->andWhere("e.matieres = :matiere")
            ->setParameter("parcours", $parcours)
            ->setParameter("matiere", $matiere);

        return $queryBuilder->getQuery()->getSingleResult();
    }
    public function resetAllMatiereParcours()
    {
        $rawSql = "DELETE FROM matiere_parcours";
        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute();
    }

}
