<?php

namespace UpjvBundle\Repository;
use UpjvBundle\Entity\Parcours;
use UpjvBundle\Entity\PoleDeCompetence;
use UpjvBundle\Entity\Utilisateur;

/**
 * ParcoursRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PoleDeCompetenceParcoursRepository extends \Doctrine\ORM\EntityRepository
{
    public function getNbrMatiereOptionnelMustHaveUserByPole(Utilisateur $user,PoleDeCompetence $poleDeCompetence){
        $result = $this->createQueryBuilder('p')
            ->select('p.nbrMatiereOptionnelle')
            ->join('p.parcours','parcours')
            ->join('parcours.matieres','matieres')
            ->join('p.poleDeCompetence','poleDeCompetence')
            ->join('parcours.utilisateur','utilisateur')
            ->where('utilisateur = :utilisateur')
            ->setParameter('utilisateur',$user)
            ->andWhere('poleDeCompetence = :poleDeCompetence')
            ->setParameter('poleDeCompetence',$poleDeCompetence)
            ->distinct()
            ->getQuery()
            ->getResult();

        return $result[0]['nbrMatiereOptionnelle'];
    }

    /**
     * Recherche par parcours.
     * @param $parcours Parcours
     * @return mixed
     */
    public function findByParcours ($parcours) {
        $queryBuilder = $this->createQueryBuilder('e');
        $queryBuilder
            ->where("e.parcours = :parcours")
            ->setParameter("parcours", $parcours);

        return $queryBuilder->getQuery()->getResult();
    }
    public function resetAllPoledeCompetenceParcours()
    {
        $rawSql = "DELETE FROM pole_de_competence_parcours";
        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute();
    }

}